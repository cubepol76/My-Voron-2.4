[homing_override]
axes: z
set_position_z: 0
gcode:
  {% set homing = printer['gcode_macro _USER_VARIABLE'].homing %}
  {% set home_x, home_y, home_z = False, False, False %} 

  {% if params.X is not defined and params.Y is not defined and params.Z is not defined %} ; G28
    {% set home_x, home_y, home_z = True, True, True %}
  {% else %}
    {% if params.X is defined %}
      {% set home_x = True %}
    {% endif %}    
    {% if params.Y is defined %}
      {% set home_y = True %}
    {% endif %}    
    {% if params.Z is defined %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set home_x = True %}
      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set home_y = True %}
      {% endif %}
      {% set home_z = True %}
    {% endif %}
  {% endif %}
  
  led_status_homing
  _SET_ACC VAL=HOME                                   
  G0 Z{homing.hop_z} F{homing.speed_hop_z}  
  {% if home_x %}
    G28 X
  {% endif %}  
  {% if home_y %}
    G28 Y
  {% endif %}  
  {% if home_z %}
    _HOME_Z
  {% endif %}                 ; home Z
  _SET_ACC
  LOG_INFORMATION MSG="Homing DONE"                                      ; set accel and accel_to_decel back to cfg value
  led_status_ready



[gcode_macro _HOME_Z]
description: Helper: z homing
gcode:
  {% set homing = printer['gcode_macro _USER_VARIABLE'].homing %}
  {% set stepper_x = printer.configfile.settings.stepper_x %}
  {% set stepper_y = printer.configfile.settings.stepper_y %}
 
  {% set home_pos_x = (stepper_x.position_max - stepper_x.position_min) / 2 - homing.probe_offset.x %}
  {% set home_pos_y = (stepper_y.position_max - stepper_y.position_min) / 2 - homing.probe_offset.y %}
  LOG_INFORMATION MSG="Homing Position X, Y: {home_pos_x}, {home_pos_y}"
  G90
  G0 X{home_pos_x} Y{home_pos_y} F{homing.speed_z}   ; move to endstop position
  G28 Z                                                   ; home Z
  G0 Z{homing.hop_z} F{homing.speed_hop_z}                   ; lift toolhead
 
  {% if not printer.gcode_move.absolute_coordinates %}
    G91
  {% endif %} ; set it back to relative



[gcode_macro _SET_ACC]
description: Helper: Set accel and accel_to_decel value
variable_last_val: 'CONFIG'
gcode:
  {% set val = params.VAL|default('CONFIG') %}
  {% set accel = printer['gcode_macro _USER_VARIABLE'].homing.accel_z
               if val == 'HOME'
               else printer.configfile.settings.printer.max_accel %}
  {% set accel_to_decel = accel / 2 
                        if val == 'HOME'
                        else printer.configfile.settings.printer.max_accel_to_decel %}
  
  {% if val != last_val %}
    SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=last_val VALUE='"{val}"'
    LOG_INFORMATION MSG="Set Acceleration and Decceleration: {accel}, {accel_to_decel}"
    SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
  {% endif %}



## conditional home
[gcode_macro _CG28]
description: Helper: Conditional homing
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}



[gcode_macro _SET_Z_CURRENT]
description: Helper: Set Z-drive motor current
variable_last_val: 'CONFIG'
gcode:
  {% set val = params.VAL|default('CONFIG') %}
  {% set z_current = printer['gcode_macro _USER_VARIABLE'].homing.current_z 
                   if val == 'HOME'
                   else printer.configfile.settings['tmc2209 stepper_z'].run_current %}
            
  {% if val != last_val %}
    # Save prevous value
    SET_GCODE_VARIABLE MACRO=_SET_Z_CURRENT VARIABLE=last_val VALUE='"{val}"'
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={z_current}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={z_current}
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={z_current}
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={z_current}
    # Wait in a loop until all moves in the planner are completed
    M400
  {% endif %}


[gcode_macro QUAD_GANTRY_LEVEL]
description: Conform a moving, twistable gantry to the shape of a stationary bed
rename_existing: QUAD_GANTRY_LEVEL_BASE
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  G28
  _SET_ACC VAL=HOME 
  QUAD_GANTRY_LEVEL_BASE {rawparams} 
  _SET_ACC  
  {% if params.PARK|default('true')|lower == 'true' %}
    #G90
    #G0 X{user.park.bed.x} Y{user.park.bed.y} Z{user.park.bed.z} F{user.speed.travel}
  {% endif %}
  {% if not printer.gcode_move.absolute_coordinates %}
    G91
  {% endif %} ; set back to relative








